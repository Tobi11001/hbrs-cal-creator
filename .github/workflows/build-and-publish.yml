name: Build and Publish Docker Images

on:
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for backend Docker image
        id: meta-backend
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend

      - name: Extract metadata (tags, labels) for frontend Docker image
        id: meta-frontend
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend

      - name: Build temp backend Docker image to run the service for frontend build
        uses: docker/build-push-action@v5
        with:
          context: .  # Root context to include the entire repository for backend build
          file: ./backend/Dockerfile
          tags: temp-backend:latest
          push: false

      - name: Start backend container
        uses: addnab/docker-run-action@v3
        with:
          image: temp-backend:latest
          options: -d -p 8080:8080 --name backend-container

      - name: Wait for backend service to be healthy
        run: |
          for i in {1..10}; do
            if docker exec backend-container curl --fail http://localhost:8080/actuator/health; then
              echo "Backend is healthy!"
              break
            else
              echo "Waiting for backend to be ready..."
              sleep 5
            fi
          done

      - name: Build and push frontend Docker image
        id: push-frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend  # Specific context for frontend build
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          build-args: |
            BACKEND_URL=http://localhost:8080

      - name: Stop backend container
        run: docker stop backend-container && docker rm backend-container

      - name: Build and Push backend Docker image
        id: push-backend
        uses: docker/build-push-action@v5
        with:
          context: .  # Root context to include the entire repository for backend build
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}

      - name: Generate artifact attestation for backend Docker image
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend
          subject-digest: ${{ steps.push-backend.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation for frontend Docker image
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend
          subject-digest: ${{ steps.push-frontend.outputs.digest }}
          push-to-registry: true
